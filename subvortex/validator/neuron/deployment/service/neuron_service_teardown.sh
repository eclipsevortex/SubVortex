#!/bin/bash

set -euo pipefail

NEURON_NAME="subvortex-validator"
SERVICE_NAME="$NEURON_NAME-neuron"
PACKAGE_NAME="subvortex"

# Determine script directory dynamically to ensure everything runs in ./scripts/api/
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
cd "$SCRIPT_DIR/../.."

echo "üì¶ Starting Validator Neuron teardown..."

# Stop and disable the systemd service
echo "üîç Checking for existing systemd service: $SERVICE_NAME..."
if systemctl list-units --type=service --all | grep -q "${SERVICE_NAME}.service"; then
    if systemctl is-active --quiet "$SERVICE_NAME"; then
        echo "üõë Stopping systemd service: $SERVICE_NAME..."
        sudo systemctl stop "${SERVICE_NAME}.service"
    fi
    
    echo "üö´ Disabling systemd service: $SERVICE_NAME..."
    sudo systemctl disable "${SERVICE_NAME}.service"
    
    echo "üßπ Removing systemd service file..."
    sudo rm -f "/etc/systemd/system/${SERVICE_NAME}.service"
    
    echo "üîÑ Reloading systemd daemon..."
    sudo systemctl daemon-reexec
    sudo systemctl daemon-reload
else
    echo "‚ÑπÔ∏è Systemd service ${SERVICE_NAME}.service not found. Skipping stop/disable."
fi

# Remove log directory
LOG_DIR="/var/log/$NEURON_NAME"
echo "üßπ Checking for log directory at $LOG_DIR..."
if [[ -d "$LOG_DIR" ]]; then
    echo "üßπ Removing log directory: $LOG_DIR"
    sudo rm -rf "$LOG_DIR"
else
    echo "‚ÑπÔ∏è Log directory $LOG_DIR does not exist. Skipping."
fi

# Uninstall dependencies if virtual environment exists
echo "üîç Checking for Python virtual environment..."
if [[ -d "venv" ]]; then
    echo "üêç Activating virtual environment..."
    source "venv/bin/activate"
    
    if ./venv/bin/python -m pip list | grep -q "$PACKAGE_NAME"; then
        echo "üì¶ Uninstalling editable package: $PACKAGE_NAME..."
        ./venv/bin/python -m pip uninstall -y "$PACKAGE_NAME"|| true
    else
        echo "‚ÑπÔ∏è Editable package $PACKAGE_NAME not found. Skipping uninstall."
    fi
    
    if [[ -f "requirements.txt" ]]; then
        echo "üì¶ Uninstalling dependencies from requirements.txt..."
        ./venv/bin/python -m pip uninstall -y -r "requirements.txt"
    else
        echo "‚ö†Ô∏è requirements.txt not found. Skipping dependency uninstallation."
    fi
    
    echo "üõë Deactivating virtual environment..."
    deactivate
    
    echo "üßπ Removing virtual environment directory..."
    rm -rf "venv"
else
    echo "‚ÑπÔ∏è Virtual environment not found. Skipping."
fi

# Ensure egg-info is removed
echo "üßπ Checking for .egg-info directory..."
EGG_INFO_DIR=$(find . -name "*.egg-info" -type d)
if [[ -n "$EGG_INFO_DIR" ]]; then
    echo "üßπ Removing egg-info directory: $EGG_INFO_DIR..."
    rm -rf "$EGG_INFO_DIR"
else
    echo "‚ÑπÔ∏è No egg-info directory found. Skipping."
fi

echo "‚úÖ Validator Neuron teardown completed successfully."
